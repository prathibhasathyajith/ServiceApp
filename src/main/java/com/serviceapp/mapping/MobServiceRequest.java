package com.serviceapp.mapping;
// Generated Apr 16, 2018 6:02:23 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * MobServiceRequest generated by hbm2java
 */
@Entity
@Table(name="mob_service_request"
    ,catalog="service_app"
)
public class MobServiceRequest  implements java.io.Serializable {


     private long serviceId;
     private MobBassData mobBassData;
     private MobUser mobUser;
     private Status status;
     private Date createdTime;
     private Date updatedTime;
     private Set<MobBassRatings> mobBassRatingses = new HashSet(0);

    public MobServiceRequest() {
    }

	
    public MobServiceRequest(long serviceId, MobUser mobUser, Status status, Date createdTime, Date updatedTime) {
        this.serviceId = serviceId;
        this.mobUser = mobUser;
        this.status = status;
        this.createdTime = createdTime;
        this.updatedTime = updatedTime;
    }
    public MobServiceRequest(long serviceId, MobBassData mobBassData, MobUser mobUser, Status status, Date createdTime, Date updatedTime, Set<MobBassRatings> mobBassRatingses) {
       this.serviceId = serviceId;
       this.mobBassData = mobBassData;
       this.mobUser = mobUser;
       this.status = status;
       this.createdTime = createdTime;
       this.updatedTime = updatedTime;
       this.mobBassRatingses = mobBassRatingses;
    }
   
     @Id 

    
    @Column(name="service_id", unique=true, nullable=false)
    public long getServiceId() {
        return this.serviceId;
    }
    
    public void setServiceId(long serviceId) {
        this.serviceId = serviceId;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="bass_id")
    public MobBassData getMobBassData() {
        return this.mobBassData;
    }
    
    public void setMobBassData(MobBassData mobBassData) {
        this.mobBassData = mobBassData;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="cust_id", nullable=false)
    public MobUser getMobUser() {
        return this.mobUser;
    }
    
    public void setMobUser(MobUser mobUser) {
        this.mobUser = mobUser;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="status", nullable=false)
    public Status getStatus() {
        return this.status;
    }
    
    public void setStatus(Status status) {
        this.status = status;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created_time", nullable=false, length=19)
    public Date getCreatedTime() {
        return this.createdTime;
    }
    
    public void setCreatedTime(Date createdTime) {
        this.createdTime = createdTime;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="updated_time", nullable=false, length=19)
    public Date getUpdatedTime() {
        return this.updatedTime;
    }
    
    public void setUpdatedTime(Date updatedTime) {
        this.updatedTime = updatedTime;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="mobServiceRequest")
    public Set<MobBassRatings> getMobBassRatingses() {
        return this.mobBassRatingses;
    }
    
    public void setMobBassRatingses(Set<MobBassRatings> mobBassRatingses) {
        this.mobBassRatingses = mobBassRatingses;
    }




}


