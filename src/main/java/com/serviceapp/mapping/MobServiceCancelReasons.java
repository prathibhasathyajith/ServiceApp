package com.serviceapp.mapping;
// Generated Jun 5, 2018 10:42:59 AM by Hibernate Tools 4.3.1


import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * MobServiceCancelReasons generated by hbm2java
 */
@Entity
@Table(name="mob_service_cancel_reasons"
    ,catalog="service_app"
)
public class MobServiceCancelReasons  implements java.io.Serializable {


     private long serviceId;
     private MobServiceRequest mobServiceRequest;
     private MobUser mobUser;
     private String reason;
     private Date createdTime;

    public MobServiceCancelReasons() {
    }

    public MobServiceCancelReasons(MobServiceRequest mobServiceRequest, MobUser mobUser, String reason, Date createdTime) {
       this.mobServiceRequest = mobServiceRequest;
       this.mobUser = mobUser;
       this.reason = reason;
       this.createdTime = createdTime;
    }
   
     @GenericGenerator(name="generator", strategy="foreign", parameters=@Parameter(name="property", value="mobServiceRequest"))@Id @GeneratedValue(generator="generator")

    
    @Column(name="service_id", unique=true, nullable=false)
    public long getServiceId() {
        return this.serviceId;
    }
    
    public void setServiceId(long serviceId) {
        this.serviceId = serviceId;
    }

@OneToOne(fetch=FetchType.LAZY)@PrimaryKeyJoinColumn
    public MobServiceRequest getMobServiceRequest() {
        return this.mobServiceRequest;
    }
    
    public void setMobServiceRequest(MobServiceRequest mobServiceRequest) {
        this.mobServiceRequest = mobServiceRequest;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="initiated_user", nullable=false)
    public MobUser getMobUser() {
        return this.mobUser;
    }
    
    public void setMobUser(MobUser mobUser) {
        this.mobUser = mobUser;
    }

    
    @Column(name="reason", nullable=false)
    public String getReason() {
        return this.reason;
    }
    
    public void setReason(String reason) {
        this.reason = reason;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created_time", nullable=false, length=19)
    public Date getCreatedTime() {
        return this.createdTime;
    }
    
    public void setCreatedTime(Date createdTime) {
        this.createdTime = createdTime;
    }




}


